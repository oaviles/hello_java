name: Deploy PoC Env App Service

on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  create-resource-group:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Azure RG
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az group create --location ${{ secrets.AZURE_REGION }} --name ${{ secrets.AZURE_RG }}
               
            
  deploy-appservice:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: [create-resource-group]
    steps:
    - uses: actions/checkout@main
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Azure App Service Env
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./IaC/Bicep/main.bicep
                
  build-java-webapp:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: [create-resource-group]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Java version
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Build with Maven
        run: mvn clean install

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: java-webapp.war
          path: '${{ github.workspace }}/target/*.war'
  
  
  deploy-java-webapp:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: [build-java-webapp,deploy-appservice]
    environment:
      name: PoC-AppService
      url: https://oa-poc-javawebapp.azurewebsites.net

    steps:
      - name: Download artifact from build job
        id: download
        uses: actions/download-artifact@v2
        with:
          name: java-webapp.war
          path: ${{ github.workspace }}/target
          
      - name: 'Deploy Java WebApp'
        run: | 
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u ${{ secrets.CLIENTID }} -p ${{ secrets.CLIENTSECRET }} --tenant ${{ secrets.TENANTID }}
          az webapp deploy --resource-group ${{ secrets.AZURE_RG }} --name oa-poc-javawebapp --src-path ${{ github.workspace }}/target/AirlinesReservationSample-0.0.1-SNAPSHOT.war --type war
        
          
  create-issue:
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    needs: [deploy-java-webapp]
    steps:
      - name: create-issue
        uses: oaviles/issue_action@v1
        with:
          issue-title: "Deployment Failure: PoC Env - ${{ github.sha }}"
          issue-body: "Validate orchestration workflow"
          repo-token: ${{secrets.GITHUB_TOKEN}}    